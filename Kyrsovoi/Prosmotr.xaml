<Window x:Class="Kyrsovoi.Prosmotr"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Kyrsovoi"
        mc:Ignorable="d"
        Title="Prosmotr" Height="630" Width="840" WindowStyle="None" ShowInTaskbar="False" WindowStartupLocation="CenterScreen" IsEnabled="True"
        ResizeMode="NoResize"
        Topmost="false"
        
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" Loaded="Window_Loaded">
    <Window.Resources>
        <!--Toggle Button style-->

        <ImageBrush x:Key="tb_mouse_over"
                    ImageSource="ImageButton/menu.png"/>

        <!--Text font Style-->
        <Style x:Key="font_style" TargetType="TextBlock">
            <Setter Property="VerticalAlignment"
                    Value="Center"/>
            <Setter Property="HorizontalAlignment"
                    Value="Left"/>
            <Setter Property="Foreground"
                    Value="White"/>
            <Setter Property="FontSize"
                    Value="20"/>
        </Style>

        <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>

                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource tb_mouse_over}"/>

                                <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource tb_mouse_over}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ToolStrip Style-->
        <Style TargetType="ToolTip" x:Key="tt_style">
            <Setter Property="Placement" Value="Right"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="20 0 0 0"/>
            <Setter Property="Background" Value="#4A5668"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="PlacementRectangle" Value="60 0 0 0"/>
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="VerticalOffset" Value="6"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="ToolTip" x:Key="hb_style">
            <Setter Property="Placement" Value="Right"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Margin" Value="20 0 0 0"/>
            <Setter Property="Background" Value="#4A5668"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="PlacementRectangle" Value="60 0 0 0"/>
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="VerticalOffset" Value="6"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="5" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" CornerRadius="5" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Grid>

        <!--Background-->
        <Grid Background="#EAEAEA">
            <Grid x:Name="clients">
                <ListView ItemsSource="{Binding Clients}" Margin="80 100 10 100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="LightGray" BorderThickness="1" Padding="10" CornerRadius="20" Margin="5">
                                <!-- Используем Grid для управления расположением кнопки и текста -->
                                <Grid ShowGridLines="False" Width="640" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <!-- Колонка для текста -->
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="110" />
                                        <!-- Колонка для кнопки -->
                                    </Grid.ColumnDefinitions>

                                    <!-- Текстовые элементы в первой колонке -->
                                    <TextBlock Text="{Binding name}" Grid.Column="0" FontWeight="Bold" FontSize="16" Margin="10 0 5 0"/>
                                    <TextBlock Text="{Binding surname}" Grid.Column="1" FontWeight="Bold" FontSize="16" Margin="0 0 10 0"/>
                                    <TextBlock Text="{Binding number}" Grid.Column="2" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="0 0 10 0"/>
                                    <TextBlock Text="{Binding email}" Grid.Column="3" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="0 0 30 0"/>

                                    <!-- Кнопка во второй колонке, выравнивается вправо -->
                                    <Button Grid.Column="4" Content="Просмотр" HorizontalAlignment="Right" VerticalAlignment="Center"
                                            FontSize="16" Background="#525252" FontWeight="UltraLight"
                                            Width="90" Height="25" Foreground="#FFFCFCFC" Margin="10 0"
                                             Tag="{Binding}" Click="Button_Click_1" />

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <Grid x:Name="homes">
                <ListView ItemsSource="{Binding Homes}" Margin="80 100 10 100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="LightGray" BorderThickness="1" Padding="10" CornerRadius="20" Margin="5">
                                <!-- Используем Grid для управления расположением кнопки и текста -->
                                <Grid ShowGridLines="False" Width="640" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <!-- Колонка для текста -->
                                        <ColumnDefinition Width="110" />
                                        <!-- Колонка для кнопки -->
                                    </Grid.ColumnDefinitions>

                                    <!-- Текстовые элементы в первой колонке -->
                                    <TextBlock Text="{Binding unit_name}" Grid.Column="0" FontWeight="Bold" FontSize="16" Margin="10 0 5 0"/>
                                    <TextBlock Text="{Binding description}" Grid.Column="1" FontWeight="Bold" TextWrapping="Wrap" Width="150" FontSize="16" Margin="0 0 10 0"/>
                                    <TextBlock Text="{Binding price_per_night}" Grid.Column="2" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="0 0 10 0"/>
                                    <Image Source="{Binding photo}" Grid.Column="3" Width="100" Height="100" Stretch="Fill"/>

                                    <!-- Кнопка во второй колонке, выравнивается вправо -->
                                    <Button Name="redactButHome" Grid.Column="4" Content="Просмотр" HorizontalAlignment="Right" VerticalAlignment="Center"
                                    FontSize="16" Background="#525252" FontWeight="UltraLight"
                                    Width="90" Height="25" Foreground="#FFFCFCFC" Margin="10 0"
                                     Tag="{Binding}" Click="Button_Click_4" />

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <Grid x:Name="employee">
                <ListView ItemsSource="{Binding Employees}" Margin="80 100 10 100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="LightGray" BorderThickness="1" Padding="10" CornerRadius="20" Margin="5">
                                <!-- Используем Grid для управления расположением кнопки и текста -->
                                <Grid ShowGridLines="False" Width="640" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <!-- Колонка для текста -->
                                        <ColumnDefinition Width="110" />
                                        <!-- Колонка для кнопки -->
                                    </Grid.ColumnDefinitions>

                                    <!-- Текстовые элементы в первой колонке -->
                                    <TextBlock Text="{Binding first_name}" Grid.Column="0" FontWeight="Bold" FontSize="16" Margin="10 0 5 0"/>
                                    <TextBlock Text="{Binding last_name}" Grid.Column="1" FontWeight="Bold" FontSize="16" Margin="0 0 10 0"/>
                                    <TextBlock Text="{Binding phone}" Grid.Column="2" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="0 0 10 0"/>
                                    <TextBlock Text="{Binding email}" Grid.Column="3" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="0 0 30 0"/>

                                    <!-- Кнопка во второй колонке, выравнивается вправо -->
                                    <Button Grid.Column="4" Content="Просмотр" HorizontalAlignment="Right" VerticalAlignment="Center"
                                    FontSize="16" Background="#525252" FontWeight="UltraLight"
                                    Width="90" Height="25" Foreground="#FFFCFCFC" Margin="10 0"
                                    Click="Button_Click_3" Tag="{Binding}" />

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <Grid x:Name="bookings">
                <ListView Name="list" ItemsSource="{Binding Bookings}" Margin="80 100 10 100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="White" />
                            <!-- Цвет по умолчанию -->
                            <Style.Triggers>
                                <!-- Подтвержденный -->
                                <DataTrigger Binding="{Binding booking_status}" Value="подтвержденный">
                                    <Setter Property="Background" Value="LightGreen" />
                                </DataTrigger>
                                <!-- Завершенный -->
                                <DataTrigger Binding="{Binding booking_status}" Value="завершенный">
                                    <Setter Property="Background" Value="LightBlue" />
                                </DataTrigger>
                                <!-- Забронированный -->
                                <DataTrigger Binding="{Binding booking_status}" Value="забронированный">
                                    <Setter Property="Background" Value="Khaki" />
                                </DataTrigger>
                                <!-- Отмененный -->
                                <DataTrigger Binding="{Binding booking_status}" Value="отмененный">
                                    <Setter Property="Background" Value="LightCoral" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="LightGray" BorderThickness="1" Padding="10" CornerRadius="20" Margin="5">
                                <!-- Используем Grid для управления расположением кнопки, текста и подписей -->
                                <Grid ShowGridLines="False" Width="640" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="110" />
                                        <!-- Колонка для кнопки -->
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25" />
                                        <!-- Ряд для текста данных -->
                                        <RowDefinition Height="Auto" />
                                        <!-- Ряд для кнопки -->
                                    </Grid.RowDefinitions>

                                    <!-- Подписи для данных -->
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Гости: " FontWeight="Bold" FontSize="14" Margin="10 0"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Сотрудники: " FontWeight="Bold" FontSize="14" Margin="10 0"/>
                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Цена: " FontStyle="Italic" FontSize="12" Foreground="Gray" Margin="10 0"/>
                                    <TextBlock Grid.Row="0" Grid.Column="3" Text="Дата создания: " FontStyle="Italic" FontSize="12" Foreground="Gray" Margin="10 0"/>



                                    <!-- Текстовые элементы (данные) -->
                                    <TextBlock Text="{Binding guests}" Grid.Row="1" Grid.Column="0" TextWrapping="Wrap" FontWeight="Bold" FontSize="16" Margin="10 0"/>
                                    <TextBlock Text="{Binding employee}" Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" FontWeight="Bold" FontSize="16" Margin="10 0"/>
                                    <TextBlock Text="{Binding total_price}" Grid.Row="1" Grid.Column="2" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="10 0"/>
                                    <TextBlock Text="{Binding created_at}" Grid.Row="1" Grid.Column="3" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="10 0"/>


                                    <!-- Кнопка во второй колонке -->
                                    <Button Grid.Row="2" Grid.Column="4" Content="Просмотр" HorizontalAlignment="Right" VerticalAlignment="Center"
                                FontSize="16" Background="#525252" FontWeight="UltraLight"
                                Width="90" Height="25" Foreground="#FFFCFCFC" Margin="10 0" Click="Button_Click" Tag="{Binding}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <Grid x:Name="service">
                <ListView ItemsSource="{Binding Servic}" Margin="80 100 10 100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="LightGray" BorderThickness="1" Padding="10" CornerRadius="20" Margin="5">
                                <!-- Используем Grid для управления расположением кнопки и текста -->
                                <Grid ShowGridLines="False" Width="640" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <!-- Колонка для текста -->
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="110" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Текстовые элементы в первой колонке -->
                                    <TextBlock Text="{Binding service_name}"  Grid.Column="0" FontWeight="Bold" FontSize="16" Margin="10 0 5 0"/>
                                    <TextBlock Text="{Binding description}"  Grid.Column="1" MaxWidth="250" TextWrapping="Wrap" FontSize="16" Margin="0 0 10 0"/>
                                    <TextBlock Text="{Binding price}"  Grid.Column="2" FontStyle="Italic" FontSize="13" Foreground="Gray" Margin="0 0 10 0" TextAlignment="Center" />
                                    <Button Grid.Column="3" Content="Просмотр" HorizontalAlignment="Right" VerticalAlignment="Center"
                                            FontSize="16" Background="#525252" FontWeight="UltraLight"
                                            Width="90" Height="25" Foreground="#FFFCFCFC" Margin="10 0" Tag="{Binding}" Click="Button_Click_5"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <!--search-->
            <TextBox x:Name="tb1" HorizontalAlignment="Left"  Margin="80,50,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="210" Height="30" Panel.ZIndex="10"
                         FontSize="20"
                         Background="Transparent"
                         Foreground="Black"
                         MaxLength="40"
                        BorderBrush="Black"
                        BorderThickness="0 0 0 1" TextChanged="tb1_TextChanged" PreviewTextInput="tb1_PreviewTextInput"
                         />
            <TextBlock Name="placeholder" IsHitTestVisible="False" FontSize="20" Text="Поиск" Margin="85,50,500,350" Panel.ZIndex="10"
                       Foreground="#FFA0A0A0">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=tb1}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <!--Sortable-->

            <Button Content="Вперед" Width="100" VerticalAlignment="Bottom" Height="30" Margin="290, 0, 0, 55" Click="Button_Click_6"></Button>

            <WrapPanel x:Name="PageButtonsPanel" Orientation="Horizontal" Margin="200 20 0 50" VerticalAlignment="Bottom" Height="40"/>
            <TextBlock Name="labelPageInfo" FontSize="14" Width="145" Height="40" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,10,50"/>
            <Button Content="Назад" Width="100" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="30" Margin="90, 0, 150, 55" Click="Button_Click_7"></Button>

            <TextBlock Background="LightGreen" Width="50" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="100,0,10,10"/>
            <TextBlock Background="LightBlue" Width="50" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="300,0,10,10"/>
            <TextBlock Background="Khaki" Width="50" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="left" Margin="500,0,10,10"/>
            <TextBlock Background="LightCoral" Width="50" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="left" Margin="700,0,10,10"/>
            <TextBlock Width="100" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="100,0,10,10"/>
            <TextBlock Width="100" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="300,0,10,10"/>
            <TextBlock Width="100" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="left" Margin="500,0,10,10"/>
            <TextBlock Width="100" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="left" Margin="700,0,10,10"/>

            <ComboBox Template="{DynamicResource ComboBoxTemplate1}" x:Name="cb1" HorizontalAlignment="Left"  Margin="310,50,0,0"  VerticalAlignment="Top" Width="210" Height="30" Panel.ZIndex="10"
                         FontSize="20"
                         Foreground="Black"
                         IsReadOnly="True" SelectionChanged="cb1_SelectionChanged"

                      >
                <ComboBoxItem Content="подтвержденный"/>
                <ComboBoxItem Content="завершенный"/>
                <ComboBoxItem Content="забронированный"/>
                <ComboBoxItem Content="отмененный"/>
                <ComboBoxItem Content="Все фильтры"/>
            </ComboBox>
            <!--filter-->
            <ComboBox x:Name="cb2" Template="{DynamicResource ComboBoxTemplate1}" Text="ubfghubt" HorizontalAlignment="Left"  Margin="540,50,0,0"  VerticalAlignment="Top" Width="210" Height="30" Panel.ZIndex="10"
             FontSize="20"
             Background="Transparent"
             Foreground="Black"
             IsReadOnly="True" SelectionChanged="cb2_SelectionChanged">
                <ComboBoxItem Content="По возрастанию"/>
                <ComboBoxItem Content="По убыванию"/>
                <ComboBoxItem Content="По умолчанию"/>
            </ComboBox>
            <Image x:Name="addUser" Source="ImageButton/addUser.png"
               Stretch="Uniform"
               Width="30"
               Height="30"
               VerticalAlignment="Top"
HorizontalAlignment="Right"
 Margin="0,50,56,0" MouseDown="Image_MouseDown_1"/>
            <Image x:Name="addEmployee" Source="ImageButton/addSotryd.png"
                    Stretch="Uniform"
                    Width="30"
                    Height="30"
                    VerticalAlignment="Top"
HorizontalAlignment="Right"
 Margin="0,50,56,0" MouseDown="addEmployee_MouseDown" />
            <Image x:Name="addService" Source="ImageButton/addService.png"
                    Stretch="Uniform"
                    Width="30"
                    Height="30"
                   VerticalAlignment="Top"
                   HorizontalAlignment="Right"
                    Margin="0,50,56,0" MouseDown="addService_MouseDown" />
            <Image x:Name="addHouse" Source="ImageButton/addHouse.png"
                    Stretch="Uniform"
                    Width="30"
                    Height="30"
                    VerticalAlignment="Top"
HorizontalAlignment="Right"
 Margin="0,50,56,0" MouseDown="addHouse_MouseDown"  />
            <Button x:Name="Add_Booking" Width="30" Height="30" VerticalAlignment="Top"
HorizontalAlignment="Right"
 Margin="0,50,10,0" Click="Button_Click_2" BorderBrush="{x:Null}">
                <Button.Background>
                    <ImageBrush ImageSource="/addBrone.png"/>
                </Button.Background>
            </Button>
            <!--Toolbar-->
            <Grid x:Name="ToolBar" Background="#FFACACAC" Height="40" VerticalAlignment="Top" MouseDown="ToolBar_MouseDown" >
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" >
                    <TextBlock x:Name="tbNameForm" Text="Бронирование" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0 0 500 0"></TextBlock>
                    <Image Name="Min" Height="22" Width="22" Margin="0 10 " MouseDown="Min_MouseDown">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="source/free-icon-minimize-sign-11001780.png"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=Min}"
                                     Value="true">
                                        <Setter Property="Source" Value="source/grey.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                        <Image.Effect>
                            <BlurEffect Radius="0.5"/>
                        </Image.Effect>
                    </Image>
                    <Image Name="krest"  Height="13" Width="13" Margin="10" MouseDown="krest_MouseDown">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="source/krest.png"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=krest}"
                                                Value="true">
                                        <Setter Property="Source" Value="source/krest2.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                        <Image.Effect>
                            <BlurEffect Radius="1"/>
                        </Image.Effect>
                    </Image>
                </StackPanel>
            </Grid>


            <!--Navigation panel-->
            <Grid x:Name="nav_pnl"
                  HorizontalAlignment="Left"
                  Width="65"
                  Background="#525252"
                  Panel.ZIndex="11">
                <StackPanel x:Name="st_pnl">
                    <!--Grid for button-->
                    <Grid Height="90">

                        <!--Menu title Menu-->

                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Margin="73 -20 0 0"
                                   Text="МЕНЮ"
                                   Foreground="White"
                                   FontSize="22"
                                   Background="Transparent"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Style="{StaticResource font_style}">
                            
                            <!--shadow effect-->
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="10"
                                                  ShadowDepth="1"
                                                  Direction="-90"
                                                  Color="White"/>
                            </TextBlock.Effect>

                        </TextBlock>

                        <!--toggle button-->
                        <ToggleButton x:Name="Tg_Btn"
                                      Grid.Column="0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="18 -20 0 0"
                                      Height="30"
                                      Width="30"
                                      BorderThickness="0"
                                      Style="{StaticResource tb_style}" PreviewMouseLeftButtonDown="Tg_Btn_PreviewMouseLeftButtonDown">

                            <!--toggle button default bckground-->

                            <ToggleButton.Background>
                                <ImageBrush ImageSource="/menu.png"
                                            Stretch="UniformToFill"/>
                            </ToggleButton.Background>

                            <ToggleButton.Triggers>

                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="HideStackPanel">
                                            <DoubleAnimation
                                                Storyboard.TargetName="nav_pnl"
                                                Storyboard.TargetProperty="Width"
                                                BeginTime="0:0:0"
                                                From="270" To="65"
                                                Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="ShowStackPanel">
                                            <DoubleAnimation
                                                 Storyboard.TargetName="nav_pnl"
                                                 Storyboard.TargetProperty="Width"
                                                 BeginTime="0:0:0"
                                                 From="65" To="270"
                                                 Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            </ToggleButton.Triggers>

                        </ToggleButton>
                    </Grid>
                    <ListView x:Name="LV"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              >

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <Border x:Name="Bd"
                                                    Height="50"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="True">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="Bd"
                                                            Value="#404D5B"/>
                                                    <Setter Property="BorderBrush"
                                                            TargetName="Bd"
                                                            Value="#404D5B"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>

                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <!--Home-->

                        <ListViewItem HorizontalAlignment="Left"
                                      Margin="0 0 0 15" MouseEnter="ListViewItem_MouseEnter">

                            <!--Tooltip-->

                            <ListViewItem.ToolTip>
                                <ToolTip x:Name="tt_home"
                                         Content="Главная страница"
                                         Style="{StaticResource hb_style}"/>
                            </ListViewItem.ToolTip>

                            <StackPanel Orientation="Horizontal"
                                        Width="240" MouseDown="StackPanel_MouseDown">

                                <Image Source="ImageButton/home.png"
                                       Stretch="Fill"
                                       Width="30"
                                       Height="30"
                                       Margin="11 0 0 0"/>
                                <TextBlock Text="Главная Страница"
                                           Margin="25 0 0 0"
                                           Style="{StaticResource font_style}"/>
                            </StackPanel>

                        </ListViewItem>

                        <!--service-->

                        <ListViewItem HorizontalAlignment="Left"
                                      Margin="0 0 0 15" MouseEnter="ListViewItem_MouseEnter">

                            <!--Tooltip-->

                            <ListViewItem.ToolTip>
                                <ToolTip x:Name="tt_service"
                                         Content="Сервисы"
                                         Style="{StaticResource tt_style}"/>
                            </ListViewItem.ToolTip>

                            <StackPanel x:Name="Service" Orientation="Horizontal"
                                        Width="230" MouseDown="Service_MouseDown">

                                <Image Source="ImageButton/yslygi.png"
                                               Stretch="Fill"
                                               Width="30"
                                               Height="30"
                                               Margin="11 0 0 0"/>
                                <TextBlock Text="Услуги"
                                           Margin="25 0 0 0"
                                           Style="{StaticResource font_style}"/>
                            </StackPanel>

                        </ListViewItem>

                        <!--booking-->

                        <ListViewItem HorizontalAlignment="Left"
                                      Margin="0 0 0 15" MouseEnter="ListViewItem_MouseEnter">

                            <!--Tooltip-->

                            <ListViewItem.ToolTip>
                                <ToolTip x:Name="tt_booking"
                                         Content="Бронирование"
                                         Style="{StaticResource hb_style}"
                                         />
                            </ListViewItem.ToolTip>

                            <StackPanel Orientation="Horizontal"
                                        Width="260" MouseDown="StackPanel_MouseDown_1">

                                <Image Source="ImageButton/bronirovanoe.png"
                                               Stretch="Fill"
                                               Width="30"
                                               Height="30"
                                               Margin="11 0 0 0"/>
                                <TextBlock Text="Бронирование"
                                           Margin="25 0 0 0"
                                           
                                           Style="{StaticResource font_style}" Width="186"/>
                            </StackPanel>

                        </ListViewItem>

                        <!--Client-->

                        <ListViewItem HorizontalAlignment="Left"
                                      Margin="0 0 0 15" MouseEnter="ListViewItem_MouseEnter">

                            <!--Tooltip-->

                            <ListViewItem.ToolTip>
                                <ToolTip x:Name="tt_suppliers"
                                         Content="Клиент"
                                         Style="{StaticResource tt_style}"/>
                            </ListViewItem.ToolTip>

                            <StackPanel Orientation="Horizontal"
                                        Width="230" MouseDown="StackPanel_MouseDown_2">

                                <Image Source="ImageButton/client.png"
                                               Stretch="Fill"
                                               Width="30"
                                               Height="30"
                                               Margin="11 0 0 0"/>
                                <TextBlock Text="Клиент"
                                           Margin="25 0 0 0"
                                           Style="{StaticResource font_style}"/>
                            </StackPanel>

                        </ListViewItem>

                        <!--supplier-->

                        <ListViewItem Name="lvSupplier" HorizontalAlignment="Left"
                                        Margin="0 0 0 15" MouseEnter="ListViewItem_MouseEnter">

                            <!--Tooltip-->

                            <ListViewItem.ToolTip>
                                <ToolTip x:Name="tt_client"
                                         Content="Сотрудники"
                                         Style="{StaticResource tt_style}"/>
                            </ListViewItem.ToolTip>

                            <StackPanel Orientation="Horizontal"
                                        Width="230" MouseDown="StackPanel_MouseDown_3">

                                <Image Source="ImageButton/sotryd.png"
                                       Stretch="Fill"
                                       Width="30"
                                       Height="30"
                                       Margin="11 0 0 0"/>
                                <TextBlock Text="Сотрудники"
                                           Margin="25 0 0 0"
                                           Style="{StaticResource font_style}"/>
                            </StackPanel>

                        </ListViewItem>
                        <!--House-->

                        <ListViewItem HorizontalAlignment="Left"
                                    Margin="0 0 0 15" MouseEnter="ListViewItem_MouseEnter">

                            <!--Tooltip-->

                            <ListViewItem.ToolTip>
                                <ToolTip x:Name="tt_house"
                                         Content="Дома"
                                         Style="{StaticResource tt_style}"/>
                            </ListViewItem.ToolTip>

                            <StackPanel Orientation="Horizontal"
                                        Width="230" MouseDown="StackPanel_MouseDown_4">

                                <Image Source="ImageButton/affordableHomes.png"
                                       Stretch="Fill"
                                       Width="30"
                                       Height="30"
                                       Margin="11 0 0 0"/>
                                <TextBlock Text="Дома"
                                           Margin="25 0 0 0"
                                           Style="{StaticResource font_style}"/>
                            </StackPanel>

                        </ListViewItem>

                    </ListView>

                    <!--listview with menu list items-->

                </StackPanel>

            </Grid>

        </Grid>
    </Grid>

</Window>
